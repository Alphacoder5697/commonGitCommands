git checkout -b "branchname" ->  creates new branch
git checkout "branchname"    ->  switches to your branch
git push origin "branchname" ->  Pushes to your branch
git add */filename           -> Stages *(All files) or by given file name
git commit -m "commit message" -> Commits staged files
git push                     -> Pushes to your current branch
git reset --hard origin/branchname ->wipe local changed with remote1
git pull <remote_name> <branch_name> ->get file from remote repo
git reset <branch_name>              -> reset branch to last commit (..use --hard option for vscode change)
git reset head~1                     -> reset head to last but one commit
git reset --hard <hash_of_commit_to_set_as_head>

--------------------------remote------------------------------------------------
git remote show                  -> lists all active remotes
git remote add origin <repo_url> ->add  remote for push
note:: rebase only self branch here newBRANCH noot master as rebase rewrites git history
rebase should use as it group branch features together and maintains clear records , merge reuires commits (whenever merge is done new commmit record is created.)